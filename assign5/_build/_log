### Starting build.
# Target: sat.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:sat.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules sat.ml > sat.ml.depends # cached
# Target: sat.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:sat.cmo, file:sat.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o sat.cmo sat.ml # cached
# Target: sat.cmx, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:sat.cmx, file:sat.ml, implem, native, ocaml, quiet, short_paths, thread }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o sat.cmx sat.ml # cached
# Target: sat.native, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, dont_link_with, extension:native, file:sat.native, link, native, ocaml, program, quiet, short_paths, thread }
ocamlfind ocamlopt -linkpkg -g -thread -package core sat.cmx -o sat.native # cached
# Compilation successful.
